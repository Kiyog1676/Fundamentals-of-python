Q.1) How Memory is managed in python?

- Answer:---> In short, memory management in python is primarily handled through a combination of reference counting and a garbage collector:

1- Reference Counting:= Python keeps track of how many references exist for each object, and when the count drops to zero, the memory for that object is deallocated.

2-Garbase Collection:= Python's garbage collector identifies and collects objects with circular referances, which reference counting along cannot handle.

Python's memory manager dynamically allocates and deallocates memory for objects, mitigates memory fragmantation,and provides tools for memory profiling. for most developer
 
Python's automatic memory management is sufficient, but understanding these mechanisms is useful for optimizing performance and diagnosing memory-related issues. 


Q.2) What is the purpose continue statement in python?

- Answer:---> the `continue` statement in Python is used to skip the current iteration of a loop and proceed to the next iteration. It allows you to bypass specific code 

within the loop based on conditions, enabling you to control the flow of your loop.


Q.3) What are negative indexes and why are they used?

- Answer:--->Negative indexes in programming allow you to access elements in a sequence, like a list or string, from the end, simplifying code and making it more readable. 

They are particularly useful when you need to work with the last few elements or when the length of the sequence is unknown or variable. Negative indexes count backward 

from the end, with -1 representing the last element, -2 representing the second-to-last element, and so on.